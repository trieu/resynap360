
-- Bảng 4: cdp_behavioral_events
-- event stream data from web_visitor_id,  after linking to cdp_master_profiles, the master_profile_id must be set
CREATE TABLE cdp_behavioral_events (
    -- Primary Key: Hashed unique string.
    -- The application layer is responsible for generating this hash before insertion.
    -- The hash should be derived from a consistent concatenation of:
    -- {event_name, web_visitor_id, master_profile_id, created_at, web_url, user_agent, session_id}
    id TEXT PRIMARY KEY,

    -- Core event information
    event_name VARCHAR(255) NOT NULL,                   -- Descriptive behavioral event name, e.g., 'product_viewed', 'form_submitted', 'chat_message_sent'.
    event_type VARCHAR(50) DEFAULT 'behavioral' NOT NULL, -- e.g., 'habit_trigger', 'emotion_reaction', 'social_share'
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),  -- Timestamp when the event occurred or was recorded. Critical for 'id' generation, set by the application.
    source_system VARCHAR(100), -- systems contributing to this profile 

    -- Identifiers
    tenant_id VARCHAR(36), -- Tenant/organization ID
    web_visitor_id VARCHAR(36) NOT NULL,           -- Identifier for the web visitor (e.g., client-side generated UUID stored as string). Part of 'id' source.
    master_profile_id UUID NULL,                   -- Foreign key to cdp_master_profiles. Links event to a known master profile if identified.

    session_id VARCHAR(255) NOT NULL,              -- Session identifier for the event. Part of 'id' source.
    mediahost VARCHAR(255) NOT NULL,        
    web_url TEXT NOT NULL,                         -- URL associated with the event (e.g., page URL, API endpoint). Part of 'id' source.

    -- STEPPS Fields: For analyzing why users talk/share content
    -- Hiểu lý do chia sẻ: dựa trên cảm xúc, tính công khai, hoặc giá trị thực tiễn.
    -- Phân nhóm hành vi viral: dùng trong AI/ML để dự đoán hoặc tối ưu nội dung.
    text_message TEXT,                                  -- For user chat messages, feedback text, or other textual input. Nullable.
    feedback_rating SMALLINT,                           -- For user-provided ratings (e.g., 1-5 stars). Nullable.
    social_context TEXT[], -- e.g., ['shared_on_zalo', 'exclusive_offer_seen']
    story_context TEXT; -- e.g., 'shared_trip_experience', 'complaint_story'
    emotion TEXT, -- e.g., 'joy', 'surprise', 'awe', 'anger'
    practical_value_type TEXT, -- e.g., 'tip', 'deal', 'how_to'

    -- Fields for product item tracking
    item_id VARCHAR(255),                        -- An original identifier from a source system if applicable (e.g., "GBXM00Y003665.000").
    item_description TEXT,                         -- Description of an item or entity involved in the event (e.g., product name).
    item_category VARCHAR(100),                    -- Category of the item/entity (e.g., "PRODUCT", "ARTICLE").
    product_code VARCHAR(255),                     -- Specific product SKU or identifier, if applicable to the event.

    -- Contextual client information
    source_ip INET,                                -- Client's IP address.
    user_agent TEXT,                               -- Client's user agent string.
    
    -- Flexible payload for additional structured or unstructured data
    metadata JSONB,                                -- For any other event-specific attributes not covered by dedicated columns.

    -- Constraints
    CONSTRAINT check_event_rating_value CHECK (feedback_rating IS NULL OR (feedback_rating >= 1 AND feedback_rating <= 10)), -- E.g: For a 1-5 star rating system, 1-10 for NPS
    CONSTRAINT fk_event_master_profile
        FOREIGN KEY (master_profile_id)
        REFERENCES cdp_master_profiles (master_profile_id)
        ON DELETE SET NULL -- If a master profile is deleted, set this foreign key to NULL. Consider other options like RESTRICT if appropriate.
        ON UPDATE CASCADE  -- If the master_profile_id changes in the parent table (unlikely for a PK), update it here.
);

-- Comments on the table and columns for clarity
COMMENT ON TABLE cdp_behavioral_events IS 'Stores behavioral events from web visitors, linkable to master profiles, for CDP purposes.';
COMMENT ON COLUMN cdp_behavioral_events.id IS 'Primary Key: A unique hashed string generated by the application from (web_visitor_id, created_at, url, session_id).';
COMMENT ON COLUMN cdp_behavioral_events.event_name IS 'The specific name of the behavioral event that occurred (e.g., "page_view", "product_impression", "add_to_cart").';
COMMENT ON COLUMN cdp_behavioral_events.created_at IS 'Timestamp (with timezone) when the event occurred. Set by the application; key component for ID hash.';
COMMENT ON COLUMN cdp_behavioral_events.web_visitor_id IS 'Identifier for the web visitor (e.g., a client-side UUID string, max 36 chars). Key component for ID hash.';
COMMENT ON COLUMN cdp_behavioral_events.master_profile_id IS 'Identifier linking this event to a consolidated master profile in cdp_master_profiles. Null if the visitor is anonymous or not yet linked.';
COMMENT ON COLUMN cdp_behavioral_events.session_id IS 'Session identifier for the event. Key component for ID hash.';
COMMENT ON COLUMN cdp_behavioral_events.web_url IS 'web_url relevant to the event (e.g., the page viewed, the API endpoint called). Key component for ID hash.';
COMMENT ON COLUMN cdp_behavioral_events.text_message IS 'Textual content for events like chat messages, comments, or feedback submissions.';
COMMENT ON COLUMN cdp_behavioral_events.feedback_rating IS 'Numerical rating provided by the user (e.g., for a product, service, or content).';
COMMENT ON COLUMN cdp_behavioral_events.item_id IS 'An optional identifier from an original source system or specific log entry.';
COMMENT ON COLUMN cdp_behavioral_events.item_description IS 'Description of the primary item or entity involved in the event (e.g., product name, article title).';
COMMENT ON COLUMN cdp_behavioral_events.item_category IS 'Category of the item or entity (e.g., PRODUCT, ARTICLE, VIDEO).';
COMMENT ON COLUMN cdp_behavioral_events.product_code IS 'Specific product SKU or identifier, if the event relates to a product.';
COMMENT ON COLUMN cdp_behavioral_events.source_ip IS 'IP address from which the event originated.';
COMMENT ON COLUMN cdp_behavioral_events.user_agent IS 'User agent string of the client (browser, mobile app) that generated the event.';
COMMENT ON COLUMN cdp_behavioral_events.metadata IS 'Flexible JSONB field for additional, variable, or unstructured event data and attributes.';

-- Suggested Indexes
-- The Primary Key 'id' will automatically have a unique index.
CREATE INDEX IF NOT EXISTS idx_cdp_events_event_name ON cdp_behavioral_events (event_name);
CREATE INDEX IF NOT EXISTS idx_cdp_events_recorded_at_desc ON cdp_behavioral_events (created_at DESC);
CREATE INDEX IF NOT EXISTS idx_cdp_events_web_visitor_id ON cdp_behavioral_events (web_visitor_id);
CREATE INDEX IF NOT EXISTS idx_cdp_events_web_visitor_id_recorded_at ON cdp_behavioral_events (web_visitor_id, created_at DESC);
CREATE INDEX IF NOT EXISTS idx_cdp_events_master_profile_id ON cdp_behavioral_events (master_profile_id) WHERE master_profile_id IS NOT NULL; -- Index only non-null values
CREATE INDEX IF NOT EXISTS idx_cdp_events_session_id ON cdp_behavioral_events (session_id);
CREATE INDEX IF NOT EXISTS idx_cdp_events_web_url ON cdp_behavioral_events (web_url) WHERE LENGTH(web_url) > 5;  -- Consider length limits for url index if urls are very long, or use a hash index.
CREATE INDEX IF NOT EXISTS idx_cdp_events_product_code ON cdp_behavioral_events (product_code) WHERE product_code IS NOT NULL;
CREATE INDEX IF NOT EXISTS idx_cdp_events_item_id ON cdp_behavioral_events (item_id) WHERE item_id IS NOT NULL;
CREATE INDEX IF NOT EXISTS idx_cdp_events_item_category ON cdp_behavioral_events (item_category) WHERE item_category IS NOT NULL;

-- Optional: GIN index for advanced querying within the JSONB metadata column.
-- CREATE INDEX IF NOT EXISTS idx_cdp_events_metadata_gin ON cdp_behavioral_events USING GIN (metadata);